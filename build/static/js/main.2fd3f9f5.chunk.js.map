{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/Services.js","App.js","index.js"],"names":["Filter","props","value","onChange","PersonForm","onSubmit","valueName","onChangeName","valueNumber","onChangeNumber","type","Persons","persons","deletePerson","map","person","key","name","number","onClick","id","baseUrl","axios","get","then","response","data","newObject","post","put","delete","Flash","message","className","Error","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","showPerson","setShowPerson","flashMessage","setFlashMessage","errorMessage","setErrorMessage","useEffect","personService","initialPersons","personObject","filter","toLowerCase","includes","event","target","preventDefault","some","window","confirm","find","found","newNumberForPerson","catch","error","setTimeout","personsReturn","concat","personToBeRemoved","personDeleted","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2fd3f9f5.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = (props) => {\n  return (\n    <div>\n      filter shown with:\n      <input\n        value={props.value}\n        onChange={props.onChange}\n      />\n    </div>\n  )\n}\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = (props) => {\n  return (\n    <form onSubmit={props.onSubmit}>\n      <div>\n        name:\n      <input\n          value={props.valueName}\n          onChange={props.onChangeName}\n        />\n      </div>\n      <div>\n        number:\n      <input\n          value={props.valueNumber}\n          onChange={props.onChangeNumber}\n        />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Persons = ({ persons, deletePerson }) => {\n  return (\n    <>\n      {persons.map(person => (\n        <p key={person.name}> {person.name} {person.number} <button onClick={() => deletePerson(person.id, person.name)}>delete</button></p>\n      ))}\n    </>\n  )\n}\n\nexport default Persons","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst deletePerson = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default {\n  getAll: getAll,\n  create: create,\n  update: update,\n  deletePerson\n}","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport personService from './services/Services'\nimport './index.css'\n\nconst Flash = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"notification flash\">{message}</div>\n  )\n}\n\nconst Error = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"notification error\">{message}</div>\n  )\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [showPerson, setShowPerson] = useState('')\n  const [flashMessage, setFlashMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber,\n      id: ''\n    }\n\n    if (persons.some(person =>\n      person.name.toLowerCase() === newName.toLowerCase())) {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        const foundName = persons.find(found => found.name === newName)\n        const id = foundName.id\n        personService\n          .update(id, personObject)\n          .then(newNumberForPerson => {\n            setPersons(persons.map(person => person.id !== id ? person : newNumberForPerson))\n          })\n          .catch(error => {\n            setErrorMessage(`Information of ${newName} has already been removed from the server`)\n            setTimeout(() => {\n              setErrorMessage(null)\n            }, 5000)\n            setNewName('')\n            setNewNumber('')\n          })\n      }\n    }\n\n    else {\n      personService\n        .create(personObject)\n        .then(personsReturn => {\n          setPersons(persons.concat(personsReturn))\n          setNewName('')\n          setNewNumber('')\n          setFlashMessage(`Added ${newName} to the phonebook`)\n          setTimeout(() => {\n            setFlashMessage(null)\n          }, 5000)\n        })\n    }\n  }\n\n  const deletePerson = (id) => {\n    const personToBeRemoved = persons.find((name) => name.id === id)\n    if (window.confirm(`Delete ${personToBeRemoved.name}?`)) {\n      personService\n        .deletePerson(id)\n        .then(response => {\n          const personDeleted = persons.filter(persons => id !== persons.id)\n          setPersons(personDeleted)\n        })\n    }\n  }\n\n  const personObject = persons.filter(person => person.name.toLowerCase().includes(showPerson.toLowerCase()))\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setShowPerson(event.target.value)\n  }\n\n  return (\n    <>\n      <h2>Phonebook</h2>\n      <Flash message={flashMessage} />\n      <Error message={errorMessage} />\n      <Filter value={showPerson} onChange={handleFilterChange} />\n      <h3>add a new</h3>\n      <PersonForm onSubmit={addPerson} valueName={newName} onChangeName={handleNameChange} valueNumber={newNumber} onChangeNumber={handleNumberChange} />\n      <h3>Numbers</h3>\n      <Persons persons={personObject} deletePerson={deletePerson} />\n    </>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />, document.getElementById('root'));"],"sourceRoot":""}